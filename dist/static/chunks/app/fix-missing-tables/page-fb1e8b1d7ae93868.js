(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7571],{19946:(e,a,t)=>{"use strict";t.d(a,{A:()=>T});var n=t(12115);let s=e=>{let a=e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,a,t)=>t?t.toUpperCase():a.toLowerCase());return a.charAt(0).toUpperCase()+a.slice(1)},i=function(){for(var e=arguments.length,a=Array(e),t=0;t<e;t++)a[t]=arguments[t];return a.filter((e,a,t)=>!!e&&""!==e.trim()&&t.indexOf(e)===a).join(" ").trim()};var r={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};let E=(0,n.forwardRef)((e,a)=>{let{color:t="currentColor",size:s=24,strokeWidth:E=2,absoluteStrokeWidth:T,className:o="",children:A,iconNode:c,...d}=e;return(0,n.createElement)("svg",{ref:a,...r,width:s,height:s,stroke:t,strokeWidth:T?24*Number(E)/Number(s):E,className:i("lucide",o),...!A&&!(e=>{for(let a in e)if(a.startsWith("aria-")||"role"===a||"title"===a)return!0})(d)&&{"aria-hidden":"true"},...d},[...c.map(e=>{let[a,t]=e;return(0,n.createElement)(a,t)}),...Array.isArray(A)?A:[A]])}),T=(e,a)=>{let t=(0,n.forwardRef)((t,r)=>{let{className:T,...o}=t;return(0,n.createElement)(E,{ref:r,iconNode:a,className:i("lucide-".concat(s(e).replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()),"lucide-".concat(e),T),...o})});return t.displayName=s(e),t}},40646:(e,a,t)=>{"use strict";t.d(a,{A:()=>n});let n=(0,t(19946).A)("circle-check-big",[["path",{d:"M21.801 10A10 10 0 1 1 17 3.335",key:"yps3ct"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]])},42099:(e,a,t)=>{"use strict";t.d(a,{N:()=>n});let n=(0,t(55647).UU)("https://yhznjxfzpthmyyhbhihp.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inloem5qeGZ6cHRobXl5aGJoaWhwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQyNDE0MzcsImV4cCI6MjA2OTgxNzQzN30.BlP9YoilaPopQgkZXZa-_WJPUIjnX9nTyYspaBV0Cqc")},54213:(e,a,t)=>{"use strict";t.d(a,{A:()=>n});let n=(0,t(19946).A)("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]])},73139:(e,a,t)=>{"use strict";t.r(a),t.d(a,{default:()=>A});var n=t(95155),s=t(12115),i=t(42099),r=t(54213),E=t(40646);let T=(0,t(19946).A)("play",[["path",{d:"M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z",key:"10ikf1"}]]);var o=t(85339);function A(){let[e,a]=(0,s.useState)([]),[t,A]=(0,s.useState)(!1),c=e=>{a(a=>[...a,e])},d=async()=>{A(!0),a([]);try{c("\uD83D\uDD27 Running quick database repair...");let e=await fetch("/api/repair-database",{method:"POST",headers:{"Content-Type":"application/json"}}),a=await e.json();a.success?(a.results.forEach(e=>c(e)),c("\uD83C\uDF89 Quick repair completed!")):(c("❌ Quick repair failed: ".concat(a.error)),a.results&&a.results.forEach(e=>c(e)))}catch(e){c("❌ Error: ".concat(e.message))}finally{A(!1)}},l=async()=>{A(!0),a([]);try{c("\uD83D\uDD27 Creating missing database tables...");let{error:e}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS core_documentation (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          name VARCHAR(255) NOT NULL,\n          category VARCHAR(100),\n          document_type VARCHAR(50),\n          version VARCHAR(20),\n          author VARCHAR(255),\n          file_url TEXT,\n          file_size INTEGER,\n          tags TEXT,\n          is_confidential BOOLEAN DEFAULT false,\n          description TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_core_documentation_organization_id ON core_documentation(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_core_documentation_category ON core_documentation(category);\n      "});e?c("⚠️ Core Documentation table: ".concat(e.message)):c("✅ Core Documentation table created");let{error:a}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS domains (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          domain_name VARCHAR(255) NOT NULL,\n          registrar VARCHAR(255),\n          registration_date DATE,\n          expiration_date DATE,\n          auto_renew BOOLEAN DEFAULT false,\n          dns_provider VARCHAR(255),\n          nameservers TEXT[],\n          status VARCHAR(50) DEFAULT 'active',\n          notes TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_domains_organization_id ON domains(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_domains_expiration_date ON domains(expiration_date);\n      "});a?c("⚠️ Domains table: ".concat(a.message)):c("✅ Domains table created");let{error:t}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS known_issues (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          title VARCHAR(255) NOT NULL,\n          description TEXT,\n          severity VARCHAR(50) DEFAULT 'medium',\n          status VARCHAR(50) DEFAULT 'open',\n          category VARCHAR(100),\n          affected_systems TEXT,\n          reported_by VARCHAR(255),\n          assigned_to VARCHAR(255),\n          reported_date DATE,\n          resolved_date DATE,\n          workaround TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_known_issues_organization_id ON known_issues(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_known_issues_status ON known_issues(status);\n        CREATE INDEX IF NOT EXISTS idx_known_issues_severity ON known_issues(severity);\n      "});t?c("⚠️ Known Issues table: ".concat(t.message)):c("✅ Known Issues table created");let{error:n}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS warranties (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          asset_name VARCHAR(255) NOT NULL,\n          manufacturer VARCHAR(255),\n          model VARCHAR(255),\n          serial_number VARCHAR(255),\n          purchase_date DATE,\n          warranty_start_date DATE,\n          warranty_end_date DATE,\n          warranty_type VARCHAR(100),\n          coverage_details TEXT,\n          vendor_contact VARCHAR(255),\n          notes TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_warranties_organization_id ON warranties(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_warranties_end_date ON warranties(warranty_end_date);\n      "});n?c("⚠️ Warranties table: ".concat(n.message)):c("✅ Warranties table created");let{error:s}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS ssl_certificates (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          domain_name VARCHAR(255) NOT NULL,\n          certificate_authority VARCHAR(255),\n          certificate_type VARCHAR(100),\n          issued_date DATE,\n          expiration_date DATE,\n          auto_renew BOOLEAN DEFAULT false,\n          status VARCHAR(50) DEFAULT 'active',\n          certificate_path TEXT,\n          private_key_path TEXT,\n          notes TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_ssl_certificates_organization_id ON ssl_certificates(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_ssl_certificates_expiration_date ON ssl_certificates(expiration_date);\n      "});s?c("⚠️ SSL Certificates table: ".concat(s.message)):c("✅ SSL Certificates table created");let{error:r}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS rfcs (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          title VARCHAR(255) NOT NULL,\n          description TEXT,\n          rfc_number VARCHAR(50),\n          category VARCHAR(100),\n          priority VARCHAR(50) DEFAULT 'medium',\n          status VARCHAR(50) DEFAULT 'pending',\n          requested_by VARCHAR(255),\n          assigned_to VARCHAR(255),\n          requested_date DATE,\n          target_date DATE,\n          completed_date DATE,\n          impact_assessment TEXT,\n          rollback_plan TEXT,\n          notes TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_rfcs_organization_id ON rfcs(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_rfcs_status ON rfcs(status);\n        CREATE INDEX IF NOT EXISTS idx_rfcs_priority ON rfcs(priority);\n      "});r?c("⚠️ RFCs table: ".concat(r.message)):c("✅ RFCs table created");let{error:E}=await i.N.rpc("exec_sql",{sql:"\n        CREATE TABLE IF NOT EXISTS assets (\n          id UUID DEFAULT gen_random_uuid() PRIMARY KEY,\n          organization_id UUID REFERENCES organizations(id) ON DELETE CASCADE,\n          name VARCHAR(255) NOT NULL,\n          asset_type VARCHAR(100),\n          manufacturer VARCHAR(255),\n          model VARCHAR(255),\n          serial_number VARCHAR(255),\n          asset_tag VARCHAR(100),\n          location VARCHAR(255),\n          status VARCHAR(50) DEFAULT 'active',\n          purchase_date DATE,\n          purchase_cost DECIMAL(10,2),\n          warranty_expiration DATE,\n          assigned_to VARCHAR(255),\n          notes TEXT,\n          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n          last_sync_at TIMESTAMP WITH TIME ZONE\n        );\n        \n        CREATE INDEX IF NOT EXISTS idx_assets_organization_id ON assets(organization_id);\n        CREATE INDEX IF NOT EXISTS idx_assets_type ON assets(asset_type);\n        CREATE INDEX IF NOT EXISTS idx_assets_status ON assets(status);\n      "});E?c("⚠️ Assets table: ".concat(E.message)):c("✅ Assets table created");let{error:T}=await i.N.rpc("exec_sql",{sql:"\n        ALTER TABLE documents\n        ADD COLUMN IF NOT EXISTS category VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS document_type VARCHAR(50),\n        ADD COLUMN IF NOT EXISTS version VARCHAR(20),\n        ADD COLUMN IF NOT EXISTS author VARCHAR(255),\n        ADD COLUMN IF NOT EXISTS tags TEXT,\n        ADD COLUMN IF NOT EXISTS is_confidential BOOLEAN DEFAULT false,\n        ADD COLUMN IF NOT EXISTS last_sync_at TIMESTAMP WITH TIME ZONE;\n      "});T?c("⚠️ Documents table update: ".concat(T.message)):c("✅ Documents table updated with missing fields");let{error:o}=await i.N.rpc("exec_sql",{sql:"\n        ALTER TABLE passwords\n        ADD COLUMN IF NOT EXISTS password VARCHAR(255),\n        ADD COLUMN IF NOT EXISTS category VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS resource_name VARCHAR(255),\n        ADD COLUMN IF NOT EXISTS shared BOOLEAN DEFAULT false,\n        ADD COLUMN IF NOT EXISTS expires_at DATE,\n        ADD COLUMN IF NOT EXISTS last_rotated DATE,\n        ADD COLUMN IF NOT EXISTS last_sync_at TIMESTAMP WITH TIME ZONE;\n      "});o?c("⚠️ Passwords table update: ".concat(o.message)):c("✅ Passwords table updated with missing fields");let{error:A}=await i.N.rpc("exec_sql",{sql:"\n        ALTER TABLE configurations\n        ADD COLUMN IF NOT EXISTS category VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS configuration_type VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS version VARCHAR(50),\n        ADD COLUMN IF NOT EXISTS status VARCHAR(50) DEFAULT 'active',\n        ADD COLUMN IF NOT EXISTS environment VARCHAR(50),\n        ADD COLUMN IF NOT EXISTS last_sync_at TIMESTAMP WITH TIME ZONE;\n      "});A?c("⚠️ Configurations table update: ".concat(A.message)):c("✅ Configurations table updated with missing fields");let{error:d}=await i.N.rpc("exec_sql",{sql:"\n        ALTER TABLE locations\n        ADD COLUMN IF NOT EXISTS location_type VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS contact_person VARCHAR(255),\n        ADD COLUMN IF NOT EXISTS phone VARCHAR(50),\n        ADD COLUMN IF NOT EXISTS email VARCHAR(255),\n        ADD COLUMN IF NOT EXISTS timezone VARCHAR(100),\n        ADD COLUMN IF NOT EXISTS business_hours TEXT,\n        ADD COLUMN IF NOT EXISTS last_sync_at TIMESTAMP WITH TIME ZONE;\n      "});d?c("⚠️ Locations table update: ".concat(d.message)):c("✅ Locations table updated with missing fields"),c("\uD83C\uDF89 Database setup completed!"),c("✅ All required tables are now available for the NewItemForm component")}catch(e){c("❌ Error: ".concat(e.message))}finally{A(!1)}};return(0,n.jsx)("div",{className:"min-h-screen bg-gray-900 text-white p-6",children:(0,n.jsxs)("div",{className:"max-w-4xl mx-auto",children:[(0,n.jsxs)("div",{className:"flex items-center space-x-3 mb-6",children:[(0,n.jsx)(r.A,{className:"w-8 h-8 text-blue-500"}),(0,n.jsx)("h1",{className:"text-3xl font-bold",children:"Fix Missing Database Tables"})]}),(0,n.jsxs)("div",{className:"bg-gray-800 rounded-lg p-6 mb-6",children:[(0,n.jsx)("p",{className:"text-gray-300 mb-4",children:"This tool will fix database schema issues for the NewItemForm component."}),(0,n.jsxs)("div",{className:"bg-gray-700 rounded p-4 mb-4",children:[(0,n.jsxs)("p",{className:"text-sm text-gray-300 mb-2",children:[(0,n.jsx)("strong",{children:"Quick Repair:"})," Fixes the most common issues (missing password column, etc.) - recommended first step."]}),(0,n.jsxs)("p",{className:"text-sm text-gray-300",children:[(0,n.jsx)("strong",{children:"Full Setup:"})," Creates all missing tables and columns - use if Quick Repair doesn't solve the issue."]})]}),(0,n.jsxs)("div",{className:"flex space-x-4",children:[(0,n.jsxs)("button",{onClick:d,disabled:t,className:"flex items-center space-x-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-600 disabled:cursor-not-allowed px-6 py-3 rounded-lg font-medium",children:[(0,n.jsx)(E.A,{className:"w-5 h-5"}),(0,n.jsx)("span",{children:t?"Repairing...":"Quick Repair"})]}),(0,n.jsxs)("button",{onClick:l,disabled:t,className:"flex items-center space-x-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed px-6 py-3 rounded-lg font-medium",children:[(0,n.jsx)(T,{className:"w-5 h-5"}),(0,n.jsx)("span",{children:t?"Creating Tables...":"Full Setup"})]})]})]}),e.length>0&&(0,n.jsxs)("div",{className:"bg-gray-800 rounded-lg p-6",children:[(0,n.jsxs)("h2",{className:"text-xl font-semibold mb-4 flex items-center space-x-2",children:[(0,n.jsx)(o.A,{className:"w-5 h-5"}),(0,n.jsx)("span",{children:"Results"})]}),(0,n.jsx)("div",{className:"space-y-2 font-mono text-sm",children:e.map((e,a)=>(0,n.jsx)("div",{className:"p-2 rounded ".concat(e.includes("✅")?"bg-green-900/30 text-green-300":e.includes("⚠️")?"bg-yellow-900/30 text-yellow-300":e.includes("❌")?"bg-red-900/30 text-red-300":e.includes("\uD83C\uDF89")?"bg-blue-900/30 text-blue-300":"bg-gray-700 text-gray-300"),children:e},a))})]})]})})}},85339:(e,a,t)=>{"use strict";t.d(a,{A:()=>n});let n=(0,t(19946).A)("circle-alert",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]])},99952:(e,a,t)=>{Promise.resolve().then(t.bind(t,73139))}},e=>{e.O(0,[5647,8441,5964,7358],()=>e(e.s=99952)),_N_E=e.O()}]);