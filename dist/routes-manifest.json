{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:file((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+)/",
      "destination": "/:file",
      "internal": true,
      "missing": [
        {
          "type": "header",
          "key": "x-nextjs-data"
        }
      ],
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\.\\w+))/$"
    },
    {
      "source": "/:notfile((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+)",
      "destination": "/:notfile/",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?!\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\.]+))$"
    },
    {
      "source": "/admin",
      "destination": "/organizations",
      "statusCode": 307,
      "regex": "^(?!/_next)/admin(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "Referrer-Policy",
          "value": "strict-origin-when-cross-origin"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        },
        {
          "key": "Strict-Transport-Security",
          "value": "max-age=31536000; includeSubDomains"
        }
      ],
      "regex": "^(?:/(.*))(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/organizations/[id]",
      "regex": "^/organizations/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/organizations/[id]/after-hour-access",
      "regex": "^/organizations/([^/]+?)/after\\-hour\\-access(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/after\\-hour\\-access(?:/)?$"
    },
    {
      "page": "/organizations/[id]/change-log",
      "regex": "^/organizations/([^/]+?)/change\\-log(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/change\\-log(?:/)?$"
    },
    {
      "page": "/organizations/[id]/configurations",
      "regex": "^/organizations/([^/]+?)/configurations(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/configurations(?:/)?$"
    },
    {
      "page": "/organizations/[id]/configurations/new",
      "regex": "^/organizations/([^/]+?)/configurations/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/configurations/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/configurations/[configId]/edit",
      "regex": "^/organizations/([^/]+?)/configurations/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPconfigId": "nxtPconfigId"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/configurations/(?<nxtPconfigId>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/contacts",
      "regex": "^/organizations/([^/]+?)/contacts(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/contacts(?:/)?$"
    },
    {
      "page": "/organizations/[id]/contacts/new",
      "regex": "^/organizations/([^/]+?)/contacts/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/contacts/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/core-documentation",
      "regex": "^/organizations/([^/]+?)/core\\-documentation(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/core\\-documentation(?:/)?$"
    },
    {
      "page": "/organizations/[id]/core-documentation/new",
      "regex": "^/organizations/([^/]+?)/core\\-documentation/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/core\\-documentation/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/core-documentation/[docId]/edit",
      "regex": "^/organizations/([^/]+?)/core\\-documentation/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPdocId": "nxtPdocId"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/core\\-documentation/(?<nxtPdocId>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/documents",
      "regex": "^/organizations/([^/]+?)/documents(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/documents(?:/)?$"
    },
    {
      "page": "/organizations/[id]/documents/new",
      "regex": "^/organizations/([^/]+?)/documents/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/documents/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/domain-tracker",
      "regex": "^/organizations/([^/]+?)/domain\\-tracker(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/domain\\-tracker(?:/)?$"
    },
    {
      "page": "/organizations/[id]/domain-tracker/new",
      "regex": "^/organizations/([^/]+?)/domain\\-tracker/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/domain\\-tracker/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/edit",
      "regex": "^/organizations/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/known-issues",
      "regex": "^/organizations/([^/]+?)/known\\-issues(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/known\\-issues(?:/)?$"
    },
    {
      "page": "/organizations/[id]/known-issues/new",
      "regex": "^/organizations/([^/]+?)/known\\-issues/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/known\\-issues/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/locations",
      "regex": "^/organizations/([^/]+?)/locations(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/locations(?:/)?$"
    },
    {
      "page": "/organizations/[id]/locations/new",
      "regex": "^/organizations/([^/]+?)/locations/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/locations/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/maintenance-windows",
      "regex": "^/organizations/([^/]+?)/maintenance\\-windows(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/maintenance\\-windows(?:/)?$"
    },
    {
      "page": "/organizations/[id]/maintenance-windows/new",
      "regex": "^/organizations/([^/]+?)/maintenance\\-windows/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/maintenance\\-windows/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/mfa",
      "regex": "^/organizations/([^/]+?)/mfa(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/mfa(?:/)?$"
    },
    {
      "page": "/organizations/[id]/mfa/new",
      "regex": "^/organizations/([^/]+?)/mfa/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/mfa/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/networks",
      "regex": "^/organizations/([^/]+?)/networks(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/networks(?:/)?$"
    },
    {
      "page": "/organizations/[id]/networks/new",
      "regex": "^/organizations/([^/]+?)/networks/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/networks/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/onsite-information",
      "regex": "^/organizations/([^/]+?)/onsite\\-information(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/onsite\\-information(?:/)?$"
    },
    {
      "page": "/organizations/[id]/passwords",
      "regex": "^/organizations/([^/]+?)/passwords(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/passwords(?:/)?$"
    },
    {
      "page": "/organizations/[id]/passwords/new",
      "regex": "^/organizations/([^/]+?)/passwords/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/passwords/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/passwords/[passwordId]/edit",
      "regex": "^/organizations/([^/]+?)/passwords/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPpasswordId": "nxtPpasswordId"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/passwords/(?<nxtPpasswordId>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/rfc",
      "regex": "^/organizations/([^/]+?)/rfc(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/rfc(?:/)?$"
    },
    {
      "page": "/organizations/[id]/rfc/new",
      "regex": "^/organizations/([^/]+?)/rfc/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/rfc/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/sidebar-management",
      "regex": "^/organizations/([^/]+?)/sidebar\\-management(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/sidebar\\-management(?:/)?$"
    },
    {
      "page": "/organizations/[id]/site-summary",
      "regex": "^/organizations/([^/]+?)/site\\-summary(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/site\\-summary(?:/)?$"
    },
    {
      "page": "/organizations/[id]/site-summary-legacy",
      "regex": "^/organizations/([^/]+?)/site\\-summary\\-legacy(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/site\\-summary\\-legacy(?:/)?$"
    },
    {
      "page": "/organizations/[id]/site-summary-legacy/new",
      "regex": "^/organizations/([^/]+?)/site\\-summary\\-legacy/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/site\\-summary\\-legacy/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/ssl-tracker",
      "regex": "^/organizations/([^/]+?)/ssl\\-tracker(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/ssl\\-tracker(?:/)?$"
    },
    {
      "page": "/organizations/[id]/ssl-tracker/new",
      "regex": "^/organizations/([^/]+?)/ssl\\-tracker/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/ssl\\-tracker/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-contract-exceptions",
      "regex": "^/organizations/([^/]+?)/tis\\-contract\\-exceptions(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-contract\\-exceptions(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-contract-exceptions/new",
      "regex": "^/organizations/([^/]+?)/tis\\-contract\\-exceptions/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-contract\\-exceptions/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-contract-exceptions/[exceptionId]/edit",
      "regex": "^/organizations/([^/]+?)/tis\\-contract\\-exceptions/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPexceptionId": "nxtPexceptionId"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-contract\\-exceptions/(?<nxtPexceptionId>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-standards-exception",
      "regex": "^/organizations/([^/]+?)/tis\\-standards\\-exception(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-standards\\-exception(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-standards-exception/new",
      "regex": "^/organizations/([^/]+?)/tis\\-standards\\-exception/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-standards\\-exception/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/tis-standards-exception/[exceptionId]/edit",
      "regex": "^/organizations/([^/]+?)/tis\\-standards\\-exception/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPexceptionId": "nxtPexceptionId"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/tis\\-standards\\-exception/(?<nxtPexceptionId>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/organizations/[id]/warranties",
      "regex": "^/organizations/([^/]+?)/warranties(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/warranties(?:/)?$"
    },
    {
      "page": "/organizations/[id]/warranties/new",
      "regex": "^/organizations/([^/]+?)/warranties/new(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/warranties/new(?:/)?$"
    },
    {
      "page": "/organizations/[id]/[...slug]",
      "regex": "^/organizations/([^/]+?)/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid",
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/organizations/(?<nxtPid>[^/]+?)/(?<nxtPslug>.+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/api-docs",
      "regex": "^/api\\-docs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/api\\-docs(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/signup",
      "regex": "^/auth/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signup(?:/)?$"
    },
    {
      "page": "/auto-fix-routing",
      "regex": "^/auto\\-fix\\-routing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auto\\-fix\\-routing(?:/)?$"
    },
    {
      "page": "/cleanup-sample-data",
      "regex": "^/cleanup\\-sample\\-data(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cleanup\\-sample\\-data(?:/)?$"
    },
    {
      "page": "/context-aware-search-demo",
      "regex": "^/context\\-aware\\-search\\-demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/context\\-aware\\-search\\-demo(?:/)?$"
    },
    {
      "page": "/debug-content",
      "regex": "^/debug\\-content(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-content(?:/)?$"
    },
    {
      "page": "/debug-db",
      "regex": "^/debug\\-db(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-db(?:/)?$"
    },
    {
      "page": "/debug-org-switching",
      "regex": "^/debug\\-org\\-switching(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-org\\-switching(?:/)?$"
    },
    {
      "page": "/debug-routing",
      "regex": "^/debug\\-routing(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-routing(?:/)?$"
    },
    {
      "page": "/debug-sidebar",
      "regex": "^/debug\\-sidebar(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-sidebar(?:/)?$"
    },
    {
      "page": "/debug-sidebar-flickering",
      "regex": "^/debug\\-sidebar\\-flickering(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-sidebar\\-flickering(?:/)?$"
    },
    {
      "page": "/deep-search-demo",
      "regex": "^/deep\\-search\\-demo(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/deep\\-search\\-demo(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/fix-content",
      "regex": "^/fix\\-content(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-content(?:/)?$"
    },
    {
      "page": "/fix-missing-tables",
      "regex": "^/fix\\-missing\\-tables(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-missing\\-tables(?:/)?$"
    },
    {
      "page": "/fix-onsite-error",
      "regex": "^/fix\\-onsite\\-error(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-onsite\\-error(?:/)?$"
    },
    {
      "page": "/fix-password-schema",
      "regex": "^/fix\\-password\\-schema(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/fix\\-password\\-schema(?:/)?$"
    },
    {
      "page": "/global",
      "regex": "^/global(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/global(?:/)?$"
    },
    {
      "page": "/glueconnect",
      "regex": "^/glueconnect(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/glueconnect(?:/)?$"
    },
    {
      "page": "/manual-db-setup",
      "regex": "^/manual\\-db\\-setup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/manual\\-db\\-setup(?:/)?$"
    },
    {
      "page": "/offline",
      "regex": "^/offline(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/offline(?:/)?$"
    },
    {
      "page": "/organizations",
      "regex": "^/organizations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/organizations(?:/)?$"
    },
    {
      "page": "/organizations/new",
      "regex": "^/organizations/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/organizations/new(?:/)?$"
    },
    {
      "page": "/personal",
      "regex": "^/personal(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/personal(?:/)?$"
    },
    {
      "page": "/reports",
      "regex": "^/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reports(?:/)?$"
    },
    {
      "page": "/search",
      "regex": "^/search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/search(?:/)?$"
    },
    {
      "page": "/setup-onedrive-integration",
      "regex": "^/setup\\-onedrive\\-integration(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/setup\\-onedrive\\-integration(?:/)?$"
    },
    {
      "page": "/setup-sidebar-tables",
      "regex": "^/setup\\-sidebar\\-tables(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/setup\\-sidebar\\-tables(?:/)?$"
    },
    {
      "page": "/test-form-builder",
      "regex": "^/test\\-form\\-builder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-form\\-builder(?:/)?$"
    },
    {
      "page": "/test-form-save",
      "regex": "^/test\\-form\\-save(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-form\\-save(?:/)?$"
    },
    {
      "page": "/test-sidebar-counts",
      "regex": "^/test\\-sidebar\\-counts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-sidebar\\-counts(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}